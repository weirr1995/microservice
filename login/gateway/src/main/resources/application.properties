
#请求auth相关配置
security.oauth2.client.clientId=gateway
security.oauth2.client.clientSecret=admin
security.oauth2.resource.token-info-uri=http://localhost:5001/oauth/check_token

#DiscoveryClientRouteLocator 发现路由
zuul.add-host-header=true
zuul.ignore-security-headers=false

#HTTP连接超时要比Hystrix的大
zuul.host.connect-timeout-millis=300000
zuul.host.socket-timeout-millis=3000000

#自动配置
#zuul.routes.track.path=/service_1/**
#zuul.routes.track.serviceId=service_1


#AbstractLoadBalancerRule 路由算法
## 熔断超时时间
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=10000
## 读取超时时间
ribbon.ReadTimeout=3000000
## 连接超时时间
ribbon.ConnectTimeout=3000


spring.kafka.bootstrap-servers=192.168.200.51:9092
spring.kafka.producer.batch-size=16384
spring.kafka.producer.retries=0
spring.kafka.producer.buffer-memory=10485760
##序列化
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

spring.kafka.consumer.group-id=test
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=
##反序列化
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringSerializer